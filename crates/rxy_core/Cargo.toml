[package]
edition = "2021"
name = "rxy_core"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
rxy_macro.workspace = true
xy_reactive = { workspace = true, optional = true }
bevy_reflect = { workspace = true, optional = true }
pin-project = { workspace = true, optional = true }

ahash.workspace = true
hashbrown.workspace = true

# bevy
bevy_utils = { workspace = true, optional = true }
glam = { workspace = true, optional = true }
bevy_asset = { workspace = true, optional = true }
bevy_text = { workspace = true, optional = true }
bevy_ui = { workspace = true, optional = true }
#bevy_transform = { workspace = true, optional = true }
bevy_render = { workspace = true, optional = true }

# native
vello = { version = "0.1.0", default-features = false, optional = true }

async-channel = { workspace = true, optional = true }
hooked_collection = { workspace = true, optional = true }
drain_filter_polyfill.workspace = true
futures-lite.workspace = true
indexmap.workspace = true
once_cell.workspace = true
oneshot.workspace = true
bitflags = { workspace = true, optional = true }
# serde.workspace = true

#derive_more.workspace = true
count-macro.workspace = true
paste.workspace = true

[features]
default = ["std", "dynamic_element", "async-channel", "either_future", "send_sync"]
send_sync = []
std = []
web_dom = []
native = ["vello"]
bevy = [
    "std", "send_sync", "bevy_utils",
    "dep:glam",
    "dep:bevy_asset",
    "dep:bevy_text",
    "dep:bevy_ui",
    #bevy_transform
    "dep:bevy_render",
]
style = ["dep:bitflags"]
view_children_erasure = []
xy_reactive = ["dep:xy_reactive", "std", "send_sync"]
bevy_reflect = ["dep:bevy_reflect", "std", "send_sync"]
x_iter_source = ["hooked_collection", "async-channel"]
either_future = ["pin-project"]
common_renderer = []
attr_index_u16 = []
dynamic_element = []

[dev-dependencies]
static_assertions = "1.1"